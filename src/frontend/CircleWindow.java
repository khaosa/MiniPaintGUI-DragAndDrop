/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package frontend;

import backend.*;
import java.awt.Color;
import java.awt.Point;
import javax.swing.JColorChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Blu-Ray
 */
public class CircleWindow extends javax.swing.JFrame implements Node {

    private Node parent;
    private Color fillcolor;
    private Color bordercolor;

    @Override
    public Node getParentNode() {
        return parent;
    }

    @Override
    public void setParentNode(Node node) {
        this.parent = node;
    }

    public CircleWindow() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FillcolorButton = new javax.swing.JButton();
        BorderColorButton = new javax.swing.JButton();
        CircleButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        XField = new javax.swing.JTextField();
        YField = new javax.swing.JTextField();
        RadiusField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Add Circle");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        FillcolorButton.setBackground(new java.awt.Color(0, 0, 0));
        FillcolorButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        FillcolorButton.setForeground(new java.awt.Color(255, 255, 255));
        FillcolorButton.setText("Select Fill Color");
        FillcolorButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        FillcolorButton.setOpaque(true);
        FillcolorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FillcolorButtonActionPerformed(evt);
            }
        });

        BorderColorButton.setBackground(new java.awt.Color(0, 0, 0));
        BorderColorButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        BorderColorButton.setForeground(new java.awt.Color(255, 255, 255));
        BorderColorButton.setText("Select Border Color");
        BorderColorButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        BorderColorButton.setOpaque(true);
        BorderColorButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorderColorButtonActionPerformed(evt);
            }
        });

        CircleButton.setBackground(new java.awt.Color(0, 0, 0));
        CircleButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        CircleButton.setForeground(new java.awt.Color(255, 255, 255));
        CircleButton.setText("Create Circle");
        CircleButton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CircleButton.setOpaque(true);
        CircleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CircleButtonActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jLabel1.setOpaque(true);
        jLabel1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Y");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel2.setOpaque(true);
        jLabel2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Radius");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel3.setOpaque(true);
        jLabel3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(FillcolorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(BorderColorButton, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(CircleButton, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(XField, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                            .addComponent(YField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RadiusField, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(XField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(YField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RadiusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FillcolorButton)
                    .addComponent(BorderColorButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CircleButton)
                .addContainerGap())
        );

        getAccessibleContext().setAccessibleName("Add Circle");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void FillcolorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FillcolorButtonActionPerformed
        // TODO add your handling code here:
        Color chosenFillColor = JColorChooser.showDialog(null, "Select a color", Color.white);
        this.fillcolor = chosenFillColor;
    }//GEN-LAST:event_FillcolorButtonActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        this.setVisible(false);
        JFrame parent = (JFrame) this.getParentNode();
        if (parent != null)      //if parent node exists
            parent.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosing

    private void BorderColorButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorderColorButtonActionPerformed
        // TODO add your handling code here:
        Color chosenBorderColor = JColorChooser.showDialog(null, "Select a color", Color.white);
        this.bordercolor = chosenBorderColor;
    }//GEN-LAST:event_BorderColorButtonActionPerformed

    private void CircleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CircleButtonActionPerformed
        // TODO add your handling code here:
        MainFrame parent = (MainFrame) this.getParentNode();
        if (XField.getText().equals(""))
            XField.setText("Add data here");
        else if (YField.getText().equals(""))
            YField.setText("Add data here");
        else if (RadiusField.getText().equals(""))
            RadiusField.setText("Add data here");
        else {
            try {
                int x = Integer.parseInt(XField.getText());
                int y = Integer.parseInt(YField.getText());
                int r = Integer.parseInt(RadiusField.getText());
                if (r < 0) {
                    RadiusField.setText("Enter a positive numerical value.");
                } else {
                    backend.Circle R = new backend.Circle(new Point(x, y), r);
                    R.setColor(bordercolor);
                    R.setFillColor(fillcolor);
                    parent.getDrawingArea().addShape(R);
                    parent.getDrawingArea().refresh(this.getGraphics());
                    parent.getDrawingArea().C++;
                    parent.getChooseShapeComboBox().addItem("Circle" + parent.getDrawingArea().C);
                    this.setVisible(false);
                    JFrame parentFrame = (JFrame) this.getParentNode();
                    if (parentFrame != null) //if parent node exists
                    {
                        parentFrame.setVisible(true);
                    }
                }
            } catch (NumberFormatException e) {
                if (!parent.isInteger(XField.getText())) {
                    XField.setText("Not a numeric value.");
                } else if (!parent.isInteger(YField.getText())) {
                    YField.setText("Not a numeric value.");
                } else if (!parent.isInteger(RadiusField.getText())) {
                    RadiusField.setText("Not a numeric value.");

                }
            }
    }//GEN-LAST:event_CircleButtonActionPerformed
    }
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BorderColorButton;
    private javax.swing.JButton CircleButton;
    private javax.swing.JButton FillcolorButton;
    private javax.swing.JTextField RadiusField;
    private javax.swing.JTextField XField;
    private javax.swing.JTextField YField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
